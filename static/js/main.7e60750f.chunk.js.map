{"version":3,"sources":["images/loading.gif","images/splash.png","components/search/Searchbox.js","components/Header.js","components/Footer.js","components/search/SearchItem.js","components/search/SearchResults.js","components/recipe/Ingredient.js","components/recipe/RecipeDetail.js","components/menu/MealItem.js","components/menu/MealList.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Searchbox","state","query","handleChange","e","_this","setState","target","value","searchSubmit","preventDefault","props","history","push","react_default","a","createElement","Form","inline","onSubmit","this","FormControl","type","placeholder","className","onChange","Button","onClick","Component","withRouter","Header","Navbar","bg","expand","Brand","Link","to","Toggle","aria-controls","Collapse","id","Nav","search_Searchbox","Footer","style","styles","footer","h5","padding","backgroundColor","marginTop","color","SearchItem","src","item","image","alt","name","SearchResults","responseArray","loading","that","match","params","searchQuery","fetch","then","response","json","myJson","responseObjects","i","matches","length","cleanName","recipeName","replace","secureImage","imageUrlsBySize","error","catch","prevProps","componentDidMount","map","search_SearchItem","key","data","LoadIndicator","ul","generateList","listStyleType","Ingredient","RecipeDetail","recipe","ingredients","added","recipeID","console","log","images","hostedLargeUrl","servings","numberOfServings","flavors","externalURL","source","sourceRecipeUrl","ingredientLines","j","recipe_Ingredient","addItem","addButton","_this2","variant","href","rel","MealItem","img","onDelete","maxWidth","MealList","menu","recipes","menu_MealItem","deleteItem","menuArray","tmp","rec","index","display","createMenuList","createIngredientList","HomePage","class","height","backgroundImage","Background","backgroundPosition","backgroundRepeat","backgroundSize","App","menus","localStorage","getItem","menuList","JSON","parse","pIndex","Object","toConsumableArray","splice","setItem","stringify","HashRouter","components_Header","Route","exact","path","component","render","routeProps","recipe_RecipeDetail","assign","menu_MealList","deleteItemAt","components_Footer","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e60750f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.f0d26039.gif\";","module.exports = __webpack_public_path__ + \"static/media/splash.ff400f48.png\";","import React, { Component } from 'react'\nimport {withRouter} from \"react-router-dom\";\nimport {Form, FormControl, Button} from 'react-bootstrap'\n\n\nclass Searchbox extends Component {\n\n  state = {\n    \"query\" : \"\"\n  };\n\n  //when value of searchbox changes, set the state to the new value\n  handleChange = e => {\n    this.setState({\"query\": e.target.value})\n  };\n\n  //when the form is submitted prevent the page from reloading and then use the props.history\n  searchSubmit = e => {\n    e.preventDefault();\n    this.props.history.push(\"/search/\"+this.state.query);\n  }\n\n  //create our searchbox which has a method for capturing the value and a method that runs on submit\n  render() {\n    return (\n      <Form inline onSubmit={this.searchSubmit}>\n        <FormControl type=\"text\" placeholder=\"Search for recipes\" className=\"mr-sm-2\" value={this.state.query} onChange={this.handleChange}/>\n        <Button onClick={this.searchSubmit}>Search</Button>\n      </Form>\n    )\n  }\n}\n\nexport default withRouter(Searchbox);\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Navbar, Nav} from 'react-bootstrap'\nimport Searchbox from './search/Searchbox';\n\nconst Header = (props)=>{\n    return(\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand><Link to=\"/\">Meal Planner</Link></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto mr-3\">\n            <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\n            <Nav.Link><Link to=\"/menu\">Menu</Link></Nav.Link>\n          </Nav>\n          <Searchbox />\n        </Navbar.Collapse>\n      </Navbar>\n\n    )\n\n}\n\nexport default Header\n","import React from 'react'\n\nconst Footer = (props) => {\n    return(\n        <footer style={styles.footer}>\n            <h5 style={styles.h5}>©2019 Jessica Giehl, wd5.</h5>\n        </footer>\n    )\n}\n\nexport default Footer\n\nconst styles = {\n  footer: {\n    padding: '1rem',\n    backgroundColor: 'rgba(247, 245, 245, 1)',\n    marginTop: '2rem'\n  },\n  h5: {\n    color: 'rgb(74, 123, 255)'\n  }\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst SearchItem = (props) => {\n    return(\n      //from the props item, display the name and price propery\n        <li className=\"border border-dark rounded col-md-4 m-3 p-2\">\n          <img src={props.item.image} alt={props.item.name}></img>\n          <b>{props.item.name}</b>\n          <br></br>\n          <Link to={\"../recipe/\" + props.item.id}>Recipe Details</Link>\n        </li>\n    )\n}\n\nexport default SearchItem\n","import React,{Component} from 'react';\nimport SearchItem from './SearchItem';\nimport LoadIndicator from '../../images/loading.gif';\n\nclass SearchResults extends Component{\n\n    state = {\n        \"responseArray\" : [\n        ],\n        \"loading\" : true\n    }\n\n    //Make a API call when the component mounts\n    componentDidMount() {\n      let that = this;\n      //variables for storing api string\n      var url= \"https://api.yummly.com/v1/api/recipes?_app_id=a18fce64&_app_key=a14d935b77f1742265befa9527b9232e&requirePictures=true&q=\";\n      //use the prop parameters to get the search query string from the URL\n      var {query} = this.props.match.params;\n      this.setState({\"searchQuery\" : query})\n\n      fetch(url + query)\n        .then(function(response) {\n          //turn response into a JSON object\n          return response.json();\n        })\n        .then(function(myJson) {\n\n          var responseObjects = [];\n\n          //loop through the array of responses and create an object with the information for each one\n          for (var i = 0; i < myJson.matches.length; i++) {\n            //remove any HTML tags and make each image secure\n            let cleanName = myJson.matches[i].recipeName.replace(/<\\/?[^>]+(>|$)/g, \"\");\n            let secureImage = myJson.matches[i].imageUrlsBySize[90].replace(/^http:\\/\\//i, 'https://');\n            responseObjects.push({\n              name : cleanName,\n              id : myJson.matches[i].id,\n              image : secureImage\n            });\n        }\n        //set the state with our array of responseObjects\n        that.setState({responseArray: responseObjects});\n        that.setState({\"error\": false})\n        that.setState({\"loading\" : false})\n      })\n      .catch(error => that.setState({error: \"true\"}));\n    }\n\n    //when the query changes if it does not match the current query value, run the componentDidMount method for a new API call\n    componentDidUpdate(prevProps){\n      if (this.props.match.params !== prevProps.match.params){\n        this.setState({\"loading\" : true})\n        this.componentDidMount();\n      }\n    }\n\n    //method that maps through our menu prop and uses the values to create list items\n    generateList(){\n        if (this.state.error) {\n          return \"Error, something went wrong.\";\n        } else if (!this.state.error && this.state.responseArray.length === 0){\n          return \"No search results were found.\";\n        } else {\n          let ret = this.state.responseArray.map((e,i)=>{\n            //console.log(e);\n            return <SearchItem key={i} item={e} />\n          })\n          return ret;\n        }\n    }\n\n    render(){\n      let data;\n      if (this.state.loading) {\n      data = <img src={LoadIndicator} alt=\"Loading\" />\n      } else {\n        data =  <div>\n                  <h3>Search results for {this.state.searchQuery}:</h3>\n                  <ul style={styles.ul} className=\"row justify-content-center\">{this.generateList()}</ul>\n                </div>\n      }\n        return(\n            <section className=\"mt-2 ml-4 mr-4\">\n              {data}\n            </section>\n        )\n    }\n\n}\n\nexport default SearchResults\n\nconst styles = {\n  ul: {\n    listStyleType: 'none'\n  }\n}\n","import React from 'react'\n\nconst Ingredient = (props) => {\n    return(\n        <li>{props.name}</li>\n    )\n}\n\nexport default Ingredient\n","import React,{Component} from 'react';\nimport Ingredient from './Ingredient';\nimport {Button} from 'react-bootstrap';\n\nclass RecipeDetail extends Component{\n\n  state = {\n    recipe : {\n      ingredients : [],\n    },\n    \"added\" : false\n  }\n\n  //Make a API call when the component mounts\n  componentDidMount() {\n    var that = this;\n    //variables for storing api string\n    var urlStart = \"https://api.yummly.com/v1/api/recipe/\"\n    const {recipeID} = this.props.match.params\n    var urlEnd = \"?_app_id=a18fce64&_app_key=a14d935b77f1742265befa9527b9232e\";\n    console.log(recipeID);\n\n    fetch(urlStart + recipeID + urlEnd)\n      .then(function(response) {\n        //turn response into a JSON object\n        return response.json();\n      })\n      //create a recipe object containing two arrays, one for ingredients and one for flavors and push it to the state\n      .then(function(myJson) {\n        //remove any HTML tags and make each image secure\n        let cleanName = myJson.name.replace(/<\\/?[^>]+(>|$)/g, \"\");\n        let secureImage = myJson.images[0].hostedLargeUrl.replace(/^http:\\/\\//i, 'https://');\n        var recipe = {\n          \"name\" : cleanName,\n          \"id\" : recipeID,\n          \"image\" : secureImage,\n          \"servings\" : myJson.numberOfServings,\n          \"ingredients\" : [],\n          \"flavors\" : [],\n          \"externalURL\" : myJson.source.sourceRecipeUrl\n        }\n        for (var i = 0; i < myJson.ingredientLines.length; i++) {\n          recipe.ingredients.push(myJson.ingredientLines[i]);\n        }\n        for (var j = 0; j < myJson.flavors.length; j++) {\n          recipe.flavors.push(myJson.flavors[j]);\n          console.log(myJson.flavors[j]);\n        }\n        console.log(recipe);\n        that.setState({\"recipe\":recipe});\n        console.log(that.state.recipe.ingredients);\n    })\n    .catch(error => console.error(error));\n  }\n\n  //loop through our ingredients in the state and return an ingredient component for each one\n  generateList(){\n      let ret = this.state.recipe.ingredients.map((e,i)=>{\n        return <Ingredient name={e} />\n      })\n\n      return ret;\n  }\n\n  //toggles whether and item has been added to the menu so it can't be added twice\n  addItem(){\n    this.setState({\"added\" : true})\n    this.props.addItem(this.state.recipe)\n  }\n\n    //render out the recipe details using the values we set in the state\n    //use the method we passed down through props to call app.js' addItem method\n    render(){\n\n      //create a variable for storing our button, once its clicked it will change to show the item has been added\n      let addButton;\n      if (!this.state.added) {\n        addButton = <Button onClick={() => this.addItem()}>Add to Menu</Button>\n      } else {\n        addButton =  <Button variant=\"success\">Added to Menu</Button>\n      }\n\n        return(\n          <section className=\"mt-2 ml-4 mr-4\">\n            <h2>{this.state.recipe.name}</h2>\n            <img src={this.state.recipe.image} alt={this.state.recipe.name}></img>\n            <p>Number of servings: {this.state.recipe.servings} </p>\n            <a href={this.state.recipe.externalURL} target=\"_blank\" rel=\"noopener noreferrer\">Recipe Source</a>\n            <p>Ingredients:</p>\n            <ul>\n              {this.generateList()}\n            </ul>\n            {addButton}\n          </section>\n        )\n    }\n\n}\n\nexport default RecipeDetail\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\n\nconst MealItem = (props) => {\n    return(\n      //use the props to pass down the properties or each element and a reference to the app.js method for deletion in the button\n        <li className=\"border border-dark rounded col-md-4 m-3 p-2\">\n          <img style={styles.img} src={props.item.image} alt={props.item.name}></img>\n          <h5>{props.item.name}</h5>\n          <Link to={\"../recipe/\" + props.item.id}>Recipe Details</Link>\n          <br></br>\n          <Button variant=\"danger\" onClick={props.onDelete}>Remove from menu</Button>\n        </li>\n    )\n}\n\nexport default MealItem\n\nconst styles = {\n  img: {\n    maxWidth: \"100%\"\n  }\n}\n","import React, { Component } from 'react'\nimport MealItem from './MealItem'\nimport Ingredient from '../recipe/Ingredient'\n\nclass MealList extends Component {\n\n  //loop through the recipe array passed down through props and create a mealItem for each element\n  createMenuList(){\n    let menuArray = this.props.menu[0].recipes;\n    let ret = menuArray.map((e,i)=>{\n      return <MealItem key={i} item={e} onDelete={()=>this.props.deleteItem(i)} />\n    })\n\n    return ret;\n  }\n\n  //loop through the recipe array passed down through props and then the nested ingredient array for every element\n  //create an ingredient component for each one\n  createIngredientList(){\n    let menuArray = this.props.menu[0].recipes;\n    let tmp = [];\n    for (var i = 0; i < menuArray.length; i++) {\n        let rec = menuArray[i];\n      for (var j = 0; j < rec.ingredients.length; j++) {\n        tmp.push(rec.ingredients[j]);\n      }\n    }\n    return tmp.map((item,index)=>{ return <Ingredient name={item} />});\n  }\n\n\n  render() {\n    //if there are no recipes added to the menu, display a message prompting the user to search for recipes.\n    let display;\n    if (this.props.menu[0].recipes.length === 0){\n      display = <div className=\"mb-20\">\n                  <h5>Search for recipes and add them to your menu and they will appear here!</h5>\n                </div>\n    } else {\n      display = <div>\n                  <ul className=\"row justify-content-center\" style={styles.ul}>{this.createMenuList()}</ul>\n                  <h5>Ingredient List</h5>\n                  <ul style={styles.ul}>{this.createIngredientList()}</ul>\n                </div>\n    }\n    return (\n      <section className=\"mt-2 ml-4 mr-4\">\n        <h2>Menu</h2>\n        {display}\n      </section>\n    )\n  }\n}\n\nexport default MealList\n\nconst styles = {\n  ul: {\n    listStyleType: 'none'\n  }\n}\n","import React,{Component} from 'react';\nimport Searchbox from './search/Searchbox';\nimport SearchItem from './search/SearchItem';\nimport Background from '../images/splash.png'\n\nclass HomePage extends Component{\n\n    state = {\n        \"responseArray\" : [\n        ]\n    }\n\n    //Make a API call when the component mounts\n    componentDidMount() {\n      let that = this;\n      //variables for storing api string\n      var url= \"https://api.yummly.com/v1/api/recipes?_app_id=a18fce64&_app_key=a14d935b77f1742265befa9527b9232e&requirePictures=true&q=\";\n      //use the prop parameters to get the search query string from the URL\n      var {query} = this.props.match.params;\n      this.setState({\"searchQuery\" : query})\n\n      fetch(url + query)\n        .then(function(response) {\n          //turn response into a JSON object\n          return response.json();\n        })\n        .then(function(myJson) {\n\n          var responseObjects = [];\n\n          //loop through the array of responses and create an object with the information for each one\n          for (var i = 0; i < myJson.matches.length; i++) {\n            //remove any HTML tags and make each image secure\n            let cleanName = myJson.matches[i].recipeName.replace(/<\\/?[^>]+(>|$)/g, \"\");\n            let secureImage = myJson.matches[i].imageUrlsBySize[90].replace(/^http:\\/\\//i, 'https://');\n            responseObjects.push({\n              name : cleanName,\n              id : myJson.matches[i].id,\n              image : secureImage\n            });\n        }\n        //set the state with our array of responseObjects\n        that.setState({responseArray: responseObjects});\n      })\n      .catch(error => console.error(error));\n    }\n\n    componentDidUpdate(prevProps){\n      if (this.props.match.params !== prevProps.match.params){\n        this.componentDidMount();\n      }\n    }\n\n    //method that maps through our menu prop and uses the values to create list items\n    generateList(){\n        let ret = this.state.responseArray.map((e,i)=>{\n          //console.log(e);\n          return <SearchItem key={i} item={e} />\n        })\n\n        return ret;\n    }\n\n    render(){\n        return(\n            <section>\n              <div style={styles.bg} class=\"mb-2\">\n                <h2>Find Recipes</h2>\n                <h2>Plan Meals</h2>\n                <h2>Create Shopping Lists</h2>\n                <Searchbox />\n              </div>\n              <div className=\"row justify-content-center\">\n                <h5 className=\"justify-content-center\">Or get started with these top rated recipes!</h5>\n                {/* call the generateList function and output it in an unordered list */}\n                <ul className=\"row justify-content-center\" style={styles.ul}>{this.generateList()}</ul>\n              </div>\n            </section>\n        )\n    }\n\n}\n\nexport default HomePage\n\nconst styles = {\n  bg: {\n    height: '100%',\n    backgroundImage: 'url('+ Background +')',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    color: 'rgb(47, 47, 47)',\n    padding: '1rem'\n  },\n  ul: {\n    listStyleType: 'none'\n  }\n}\n","import React, { Component } from 'react';\nimport {HashRouter as Router, Route} from \"react-router-dom\";\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport SearchResults from './components/search/SearchResults';\nimport RecipeDetail from './components/recipe/RecipeDetail';\nimport MealList from './components/menu/MealList';\nimport HomePage from './components/HomePage';\n\nclass App extends Component {\n\n  //exists for the lifetime of the app, is static until updated with setState\n  state={\n        \"menus\":[\n          {\n            name : \"default\",\n            recipes : []\n          }\n        ],\n  }\n\n  componentDidMount(){\n    //check if there are values in local storage\n    if(localStorage.getItem('menuStorage')) {\n      //declare a var to read the data as string and then convert to JSON\n      let menuList = JSON.parse(localStorage.getItem('menuStorage'))\n      //Updates the state with new var\n      this.setState({menus: menuList})\n    }\n  }\n\n  //method to delete a recipe from the state using the index from our menu list\n  deleteItemAt(pIndex){\n    console.log(\"deleteItemAt\",pIndex)\n    //create a copy of the state array\n    let menuArray = [...this.state.menus]\n    let defaultMenu = menuArray[0];\n    //splice the new array it at the index of the item being deleted, delete just the one item\n    defaultMenu.recipes.splice(pIndex,1);\n    //set the value of the state equal to our new array\n    this.setState({menus: menuArray})\n    //update local menuStorage\n    localStorage.setItem('menuStorage', JSON.stringify(menuArray));\n  }\n\n  addItem(recipe){\n    //data binding\n    let menuArray = [...this.state.menus]\n    let defaultMenu = menuArray[0];\n    //push the recipe object to our newly created array\n    defaultMenu.recipes.push(recipe);\n    this.setState({menus: menuArray})\n    localStorage.setItem('menuStorage', JSON.stringify(menuArray));\n  }\n\n  //renders the header, searchbox, and the footer. The main body of the page is dictated by the URL,\n  //search/ and recipe/ both pass paramaters into their route components\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header/>\n          <section>\n          <Route exact path = \"/\"\n            component={HomePage}/>\n          <Route exact path = \"/search/:query\"\n            component={SearchResults}/>\n          <Route exact path = \"/recipe/:recipeID\"\n            render={(routeProps) => (\n              <RecipeDetail {...routeProps} addItem={(recipe) =>this.addItem(recipe)} />\n            )} />\n          <Route exact path = \"/menu\"\n            render={(routeProps) => (\n              <MealList {...routeProps} menu={this.state.menus} deleteItem={(i) =>this.deleteItemAt(i)} />\n            )} />\n          </section>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}